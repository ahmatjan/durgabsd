diff -u x3270-3.3/fprint_screen.c x3270-3.3-hacked/fprint_screen.c
--- x3270-3.3/fprint_screen.c	2013-07-12 00:03:24.000000000 +0200
+++ x3270-3.3-hacked/fprint_screen.c	2013-12-16 10:51:12.000000000 +0200
@@ -464,14 +465,14 @@
 				fa_high = FA_IS_HIGH(fa);
 			fa_ital = mi && FA_IS_MODIFIED(fa);
 		}
-		if (FA_IS_ZERO(fa)) {
-#if defined(X3270_DBCS) /*[*/
-			if (ctlr_dbcs_state(i) == DBCS_LEFT)
-			    	uc = 0x3000;
-			else
-#endif /*]*/
-				uc = ' ';
-		} else {
+		//if (FA_IS_ZERO(fa)) {
+//#if defined(X3270_DBCS) /*[*/
+			//if (ctlr_dbcs_state(i) == DBCS_LEFT)
+			    	//uc = 0x3000;
+			//else
+//#endif /*]*/
+				//uc = ' ';
+		//} else {
 		    	/* Convert EBCDIC to Unicode. */
 #if defined(X3270_DBCS) /*[*/
 			switch (ctlr_dbcs_state(i)) {
@@ -503,7 +504,7 @@
 			if (uc == 0)
 				uc = ' ';
 #endif /*]*/
-		}
+		//}
 
 		/* Translate to a type-specific format and write it out. */
 		if (uc == ' ' && fps->ptype != P_HTML)
diff -u x3270-3.3/macros.c x3270-3.3-hacked/macros.c
--- x3270-3.3/macros.c	2013-07-25 00:02:10.000000000 +0200
+++ x3270-3.3-hacked/macros.c	2013-12-16 10:57:22.000000000 +0200
@@ -2093,9 +2093,9 @@
 			if (buf[first + i].fa) {
 				is_zero = FA_IS_ZERO(buf[first + i].fa);
 				s += sprintf(s, " ");
-			} else if (is_zero)
-				s += sprintf(s, " ");
-			else
+			//} else if (is_zero) {
+				//s += sprintf(s, " ");
+			} else
 #if defined(X3270_DBCS) /*[*/
 			if (IS_LEFT(ctlr_dbcs_state(first + i))) {
 
diff -u x3270-3.3/screen.c x3270-3.3-hacked/screen.c
--- x3270-3.3/screen.c	2013-09-06 16:59:02.000000000 +0200
+++ x3270-3.3-hacked/screen.c	2013-12-16 23:42:49.000000000 +0200
@@ -2417,9 +2418,9 @@
 			Boolean is_vc = False;
 
 			/* Find the right graphic rendition. */
-			if (zero) {
-			    	gr = 0;
-			} else {
+			//if (zero) {
+			    	//gr = 0;
+			//} else {
 				gr = sbp->gr;
 				if (!gr)
 					gr = field_ea->gr;
@@ -2427,12 +2428,12 @@
 					any_blink = True;
 				if (appres.highlight_bold && FA_IS_HIGH(fa))
 					gr |= GR_INTENSIFY;
-			}
+			//}
 
 			/* Find the right color. */
-			if (zero) {
-			    	e_color = fa_color(FA_INT_HIGH_SEL);
-			} else {
+			//if (zero) {
+			    	//e_color = fa_color(FA_INT_HIGH_SEL);
+			//} else {
 				if (sbp->fg)
 					e_color = sbp->fg & COLOR_MASK;
 				else if (appres.mono && (gr & GR_INTENSIFY))
@@ -2443,16 +2444,22 @@
 					e_color = INVERT_COLOR(e_color);
 					reverse = True;
 				}
-			}
+				if (zero) {
+					e_color = INVERT_COLOR(e_color);
+					reverse = True;
+				}
+			//}
 			if (!appres.mono)
 				b.bits.fg = e_color;
 
 			/* Find the right character and character set. */
 			d = ctlr_dbcs_state(baddr);
-			if (zero) {
-				if (visible_control)
-					b.bits.cc = EBC_space;
-			} else if (((!visible_control || c != EBC_null) &&
+			//if (zero) {
+				//if (visible_control)
+					//b.bits.cc = EBC_space;
+					//b.bits.cc = EBC_period;
+			//} else if (((!visible_control || c != EBC_null) &&
+			if (((!visible_control || c != EBC_null) &&
 				    (c != EBC_space || d != DBCS_NONE)) ||
 			           (gr & (GR_REVERSE | GR_UNDERLINE)) ||
 				   visible_control) {
@@ -2727,13 +2734,13 @@
 	/*
 	 * For non-display fields, we ignore gr and fg.
 	 */
-	if (FA_IS_ZERO(fa)) {
-		color = fa_color(fa);
-		if (appres.mono && SELECTED(baddr)) {
-			color = INVERT_COLOR(color);
-		}
-		return color;
-	}
+	//if (FA_IS_ZERO(fa)) {
+		//color = fa_color(fa);
+		//if (appres.mono && SELECTED(baddr)) {
+			//color = INVERT_COLOR(color);
+		//}
+		//return color;
+	//}
 
 	/*
 	 * Find the color of the character or the field.
@@ -2856,18 +2863,18 @@
 	if (d == DBCS_LEFT || d == DBCS_RIGHT)
 		buffer[0].bits.cs = CS_DBCS;
 	fa = ea_buf[faddr].fa;
-	if (FA_IS_ZERO(fa)) {
-		gr = 0;
-	} else {
+	//if (FA_IS_ZERO(fa)) {
+		//gr = 0;
+	//} else {
 		gr = ea_buf[baddr].gr;
 		if (!gr)
 			gr = fa2ea(faddr)->gr;
-	}
+	//}
 	if (ea_buf[baddr].fa) {
 		if (!visible_control)
 			blank_it = 1;
-	} else if (FA_IS_ZERO(fa)) {
-		blank_it = 1;
+	//} else if (FA_IS_ZERO(fa)) {
+		//blank_it = 1;
 	} else if (text_blinkers_exist && !text_blinking_on) {
 		if (gr & GR_BLINK)
 			blank_it = 1;
@@ -3526,10 +3533,10 @@
 		/*
 		 * Color indices are the intensity bits (0 through 2)
 		 */
-		if (FA_IS_ZERO(fa) ||
-		    (appres.modified_sel && FA_IS_MODIFIED(fa)))
-			return GC_NONDEFAULT | FA_INT_NORM_SEL;
-		else
+		//if (FA_IS_ZERO(fa) ||
+		    //(appres.modified_sel && FA_IS_MODIFIED(fa)))
+			//return GC_NONDEFAULT | FA_INT_NORM_SEL;
+		//else
 			return GC_NONDEFAULT | (fa & 0x0c);
 	}
 }
diff -u x3270-3.3/select.c x3270-3.3-hacked/select.c
--- x3270-3.3/select.c	2013-07-12 00:03:27.000000000 +0200
+++ x3270-3.3-hacked/select.c	2013-12-16 10:56:16.000000000 +0200
@@ -234,18 +234,18 @@
 	int class;
 
 	/* Find the initial character class */
-	if (FA_IS_ZERO(fa))
-		ch = EBC_space;
-	else
+	//if (FA_IS_ZERO(fa))
+		//ch = EBC_space;
+	//else
 		ch = ea_buf[baddr].cc;
 	class = char_class[ebc2asc0[ch]];
 
 	/* Find the beginning */
 	for (f_start = baddr; f_start % COLS; f_start--) {
 		fa = get_field_attribute(f_start);
-		if (FA_IS_ZERO(fa))
-			ch = EBC_space;
-		else
+		//if (FA_IS_ZERO(fa))
+			//ch = EBC_space;
+		//else
 			ch = ea_buf[f_start].cc;
 		if (char_class[ebc2asc0[ch]] != class) {
 			f_start++;
@@ -256,9 +256,9 @@
 	/* Find the end */
 	for (f_end = baddr; (f_end+1) % COLS; f_end++) {
 		fa = get_field_attribute(f_end);
-		if (FA_IS_ZERO(fa))
-			ch = EBC_space;
-		else
+		//if (FA_IS_ZERO(fa))
+			//ch = EBC_space;
+		//else
 			ch = ea_buf[f_end].cc;
 		if (char_class[ebc2asc0[ch]] != class) {
 			f_end--;
@@ -1239,10 +1240,10 @@
 	}
 
 	/* If it isn't visible, then make it a blank. */
-	if (FA_IS_ZERO(fa)) {
-		*r = ' ';
-		return;
-	}
+	//if (FA_IS_ZERO(fa)) {
+		//*r = ' ';
+		//return;
+	//}
 
 #if defined(X3270_DBCS) /*[*/
 	/* Handle DBCS. */
