%define name @RpmName@
%define PubkeyBasename @PubkeyBasename@ 
%define version @VERSION@
%define release 1
%define _topdir @TOPDIR@
%define _tmppath @TOPDIR@/rpmtmp
%define manifest %{_builddir}/%{name}-%{version}-%{release}.manifest

# required items
Name: %{name}
Version: %{version}
Release: %{release}
License: GPL
Group: Application/Misc

Source: %{name}-%{version}.tar.gz
#Prefix: /usr
BuildRoot: /var/tmp/%{name}-%{version}

Summary: OpenVAS local security check preparation

%description
This package prepares a system for OpenVAS local security checks.
A user is created with a specific SSH authorized key.
The corresponding private key is located at the respective
OpenVAS installation.

%prep
%setup -q
#%patch0 -p1

%build
make

%install
rm -rf $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT/home/%{PubkeyBasename}/.ssh/
%makeinstall

# __os_install_post is implicitly expanded after the
# %install section... do it now, and then disable it,
# so all work is done before building manifest.

%{?__os_install_post}
%define __os_install_post %{nil}

# build the file list automagically into %{manifest}

cd $RPM_BUILD_ROOT
rm -f %{manifest}
find . -type d \
        | sed '1,2d;s,^\.,\%attr(-\,root\,root) \%dir ,' >> %{manifest}
find . -type f \
        | sed 's,^\.,\%attr(-\,root\,root) ,' >> %{manifest}
find . -type l \
        | sed 's,^\.,\%attr(-\,root\,root) ,' >> %{manifest}

%pre
useradd -c "OpenVAS Local Security Checks" -d /home/%{PubkeyBasename} -m -s /bin/bash %{PubkeyBasename}

%post
chown -R %{PubkeyBasename} /home/%{PubkeyBasename}/.ssh
chmod 500 /home/%{PubkeyBasename}/.ssh
chmod 400 /home/%{PubkeyBasename}/.ssh/authorized_keys


#%preun
%postun
# Remove user only if it was created by this package.
# The alien-converted debian package will run the postun script in case of
# errors (e.g. user already existed). Delete the user only if /etc/passwd lists
# content that suggests that the user was created by this package.
grep "%{PubkeyBasename}.*OpenVAS\ Local\ Security\ Checks" /etc/passwd && userdel -f %{PubkeyBasename}

%clean
rm -f %{manifest}
rm -rf $RPM_BUILD_ROOT

%files -f %{manifest}
%defattr(-,root,root)
#%doc README
#%docdir
#%config

%changelog
