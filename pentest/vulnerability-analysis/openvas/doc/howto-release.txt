Short guide on how to release one of the OpenVAS modules
--------------------------------------------------------

Last modified: 20150327

NOTE: A guide on how version numbers should be applied is given below.

NOTE: A guide for releasing Python based packaged ospd is provided below.


1. Be sure that the current code configures and compiles.

2. Usually, it is not necessary to change the version number because it has
   been increased already after the last release.
   However, if you decide to increase the version number beyond this, adjust
   the following lines accordingly
          SET(CPACK_PACKAGE_VERSION_MAJOR "2")
          SET(CPACK_PACKAGE_VERSION_MINOR "1")
          SET(CPACK_PACKAGE_VERSION_PATCH "0")
   in the top-level CMakeLists.txt.

3. Update CHANGES: Add/fix the version and date and check again whether all
   major changes have been transferred from ChangeLog.

4. Commit the changes. (see older ChangeLog entries as example)

5. Create the source tarball:
   $ mkdir build
   (If you already have a build directory, make sure it is empty)
   $ cd build
   $ cmake -DCMAKE_BUILD_TYPE=Release ..
   $ make package_source
   and test the resulting tarball again.
   This test often uncovers dependency problems that did not occur in your home
   development environment. So, do the tests carefully in a clean environment.
   The "CMAKE_BUILD_TYPE=Release" flag causes the revision number not to show
   up in the filename of the tarball.

6. Tag the release:
   svn copy svn+ssh://<YOUR_USERNAME>@svn.wald.intevation.org/openvas/trunk/openvas-<MODULE> svn+ssh://<YOUR_USERNAME>@svn.wald.intevation.org/openvas/tags/openvas-<MODULE>-release-<X>.<X>.<X>
   As commit message use "Tagging openvas-<MODULE> <X>.<X>.<X> release.".

7. Increase the patch version in the top-level CMakeLists.txt by 1, e.g.
   SET(CPACK_PACKAGE_VERSION_PATCH "3${SVN_REVISION}")

8. Commit change as "Post release version bump." (see older ChangeLog entries
   as example)

9. Create a new release at
   http://wald.intevation.org/frs/admin/qrs.php?package=&group_id=29
   and use CHANGES to fill in Release notes (general text of CHANGES) and
   ChangeLog (item list of CHANGES). Use the version number as "Release Name"
   and tick the "Preserve my pre-formatted text" check box.

10. Create MD5 and SHA1 checksums for the tarball and sign it with the OpenVAS
    Transfer Integrity Key (Key ID 48DB4530):
    md5sum xyz.tar.gz > xyz.tar.gz.md5
    sha1sum xyz.tar.gz > xyz.tar.gz.sha1
    gpg --default-key 48DB4530 --detach-sign --armor xyz.tar.gz
    Add the resulting files to the release you created in step 9.

11. Update doc/website/install-source.htm4 and doc/website/install-source-de.htm4
    with the URL to the new release, commit and "make online".

Not for BETA/RC:

12. Create the source code documentation by executing "make doc-full" in the
    build directory and upload the resulting contents of "doc/generated/html" to
    the website.

13. If the new version number does not yet occur in the list of versions in the
    (bug) tracker on wald (http://bugs.openvas.org), add it to the list
    ("Tracker"->"Bugs"->"Administration"->"Manage Custom Fields", "Version",
     "add choices").

Not for BETA/RC or initial stable releases for a new series (OpenVAS-X):

14. Announce new release on the openvas-announce mailing list.  See some of
    the previous announcements for examples.


How to release ospd and osp servers
-----------------------------------

NAME represents the OSP serve name, for example "ovaldi".

1. Be sure that the current code configures and installs.

2. Increase the revisions if not done so already. Note that
   it is distinguished between the version number of the package
   (in ospd/__version__.py or osp-servers/NAME/ospd_NAME/__init__.py),
   and (in case of ospd) the version of the protocol (ospd/ospd.py).

3. Update CHANGES: Add/fix the version and date and check again whether all
   major changes have been transferred from ChangeLog.

4. Commit the changes. (see older ChangeLog entries as example)

5. Create the source tarball:
   python setup.py sdist
   The archive file is create in subdirecory "dist".

6. Tag the release:
   ospd:
   svn copy svn+ssh://<YOUR_USERNAME>@svn.wald.intevation.org/openvas/trunk/ospd svn+ssh://<YOUR_USERNAME>@svn.wald.intevation.org/openvas/tags/ospd-release-<X>.<X>.<X>
   As commit message use "Tagging ospd <X>.<X>.<X> release.".
   osp-servers/NAME:
   svn copy svn+ssh://<YOUR_USERNAME>@svn.wald.intevation.org/openvas/trunk/osp-servers/NAME svn+ssh://<YOUR_USERNAME>@svn.wald.intevation.org/openvas/tags/osp-NAME-release-<X>.<X>.<X>
   As commit message use "Tagging osp-NAME <X>.<X>.<X> release.".

7. Increase the patch version in ospd/__init__.py or
   osp-scanner/NAME/ospd-NAME/__init__.py by 1.

8. Continue with Step 8 of the above guide for releases.


How to apply version number for OpenVAS
---------------------------------------

 * Any stable release should be given a version number N.N.N.
   Thus source code tarballs are named "module-name-N.N.N.tar.gz"

 * Any Beta and RC release refers to a next major release, never a minor
   release. Thus versions like "N.N+beta1" or "N.N+rc1" are applicable, but not
   "N.N.N+rc1".
   This ensures that for example 2.0.0 is greater than 2.0+beta1 when applying
   simple version comparison.
   Note that we use "+" instead of "-" to help packagers regarding the naming
   scheme of the resulting installation packages.


How to branch stable releases
-----------------------------

To open trunk for a next generation of a OpenVAS module, a branch is to be
created for the stable version where to maintain further patches and releases
of the stable version.

Usually, a branch happens in late beta/rc phases or early stable phase.
The earlier it happens, the more backporting work is to be expected.
The later it happens, the longer new feature developments are blocked.

Follow these steps for branching:

1. svn copy svn+ssh://<YOUR_USERNAME>@svn.wald.intevation.org/openvas/trunk/openvas-<MODULE> svn+ssh://<YOUR_USERNAME>@svn.wald.intevation.org/openvas/branches/openvas-<MODULE>-<X>.<X>
   As commit message use "Creating stable branch <X>.<X> for openvas-<MODULE>.".

2. Edit CMakeLists.txt and increase the major release (MAJOR and or MINOR).
   Also, switch to beta1 as PATCH version.
   Commit the change as "Post branch version bump." (see ChangeLog for similar entries).

