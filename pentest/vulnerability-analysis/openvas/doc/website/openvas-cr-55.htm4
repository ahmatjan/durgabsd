m4_dnl -*-html-*-
m4_include(`template.m4')

m4_dnl OpenVAS
m4_dnl $Id$
m4_dnl Description: OpenVAS Change Request #55 (Decentralized CPE identification)
m4_dnl
m4_dnl Authors:
m4_dnl Henri Doreau <henri.doreau@greenbone.net>
m4_dnl
m4_dnl Copyright:
m4_dnl Copyright (C) 2011 Greenbone Networks GmbH
m4_dnl
m4_dnl This program is free software; you can redistribute it and/or
m4_dnl modify it under the terms of the GNU General Public License
m4_dnl as published by the Free Software Foundation; either version 2
m4_dnl of the License, or (at your option) any later version.
m4_dnl
m4_dnl This program is distributed in the hope that it will be useful,
m4_dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
m4_dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
m4_dnl GNU General Public License for more details.
m4_dnl
m4_dnl You should have received a copy of the GNU General Public License
m4_dnl along with this program; if not, write to the Free Software
m4_dnl Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

m4_define(`EN')
m4_define(`TITLE', `OpenVAS')
m4_define(`MAIN', `misc')

PAGE_START
<h2>OpenVAS Change Request #55: Decentralized CPE identification</h2>

<p>
Status: Voted +4. Implemented in r11631.
</p>

<h3>References</h3>

<ul>
  <li>
    <a href="http://lists.wald.intevation.org/pipermail/openvas-plugins/2011-August/000650.html">
    First announcement of the subsystem and methodology on openvas-plugins</a>
  </li>
</ul>

<h3>Purpose</h3>

<p>
Provide a scalable and maintainable way to craft and report CPEs from within
the plugins.
</p>

<h3>Rationale</h3>

<p>
Currently CPEs are translated by cpe.inc, using a huge (and growing)
list. This system completely hides the relationships between the
scripts that perform the detection and the CPE that are finally registered.
</p>

<p>
The aim would be to get rid of that hardly maintainable list and distribute
registration of CPEs by letting detection scripts register them directly.
Instead of registering a freeform KB entry, and adding a translator in
cpe.inc, script writers should now build CPEs from within the detection script
(and register them as host details). Additionally having free-form KB entries
is still important though, as it's used by mandatory_keys() for instance.
</p>

<p>
Given that the regexp-based system which is currently in use is extremely
convenient to build CPEs from external sources (like application banners), we
propose that script writers use the build_cpe() function from cpe.inc. This
function somewhat reproduces the core behavior of cpe.inc: building a CPE
from a given value, a regular expression and the base of the CPE.
</p>


<h3>Effects</h3>

<p>
These changes should ease the integration of CPEs in the system, widen their
use and improve maintainability.
</p>

<p>
Generated CPEs should also be registered as host details, which will let
the upper layers know from which script comes a given CPE.
</p>

<p>
Script writers will be expected to add CPE handling to their scripts when
writing new OS/Application detection NVTs.
</p>

<h3>Design and Implementation</h3>

<p>
All the side components are already in place. Scripts which set the entries
listed in cpe.inc need to be ported to directly register them.
</p>


<h3>History</h3>

<ul>
  <li> 2011-10-12 Henri Doreau &lt;henri.doreau at greenbone dot net&gt;:<br/>
    Updated status.
  </li>
  <li> 2011-09-16 Henri Doreau &lt;henri.doreau at greenbone dot net&gt;:<br/>
    Updated status.
  </li>
  <li> 2011-09-01 Henri Doreau &lt;henri.doreau at greenbone dot net&gt;:<br/>
    Updated the "Effects" section.
  </li>
  <li> 2011-08-25 Henri Doreau &lt;henri.doreau at greenbone dot net&gt;:<br/>
    Initial text.
  </li>
</ul>
