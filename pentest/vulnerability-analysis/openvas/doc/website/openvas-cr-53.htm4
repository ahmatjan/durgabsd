m4_dnl -*-html-*-
m4_include(`template.m4')

m4_dnl OpenVAS
m4_dnl $Id$
m4_dnl Description: OpenVAS Change Request #53 (Remove Support for Shared Sockets)
m4_dnl
m4_dnl Authors:
m4_dnl Michael Wiegand <michael.wiegand@greenbone.net>
m4_dnl
m4_dnl Copyright:
m4_dnl Copyright (C) 2011 Greenbone Networks GmbH
m4_dnl
m4_dnl This program is free software; you can redistribute it and/or
m4_dnl modify it under the terms of the GNU General Public License
m4_dnl as published by the Free Software Foundation; either version 2
m4_dnl of the License, or (at your option) any later version.
m4_dnl
m4_dnl This program is distributed in the hope that it will be useful,
m4_dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
m4_dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
m4_dnl GNU General Public License for more details.
m4_dnl
m4_dnl You should have received a copy of the GNU General Public License
m4_dnl along with this program; if not, write to the Free Software
m4_dnl Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

m4_define(`EN')
m4_define(`TITLE', `OpenVAS')
m4_define(`MAIN', `misc')



PAGE_START
<h2>OpenVAS Change Request #53: Remove Support for Shared Sockets</h2>

<p>
Status: Voted +4. Done as of SVN rev. 11046. Will be first released with
OpenVAS Scanner 3.3.0.
</p>

<h3>References</h3>

<ul>
  <li>
  <a
    href="http://lists.wald.intevation.org/pipermail/openvas-devel/2011-April/002617.html">Mail
    to openvas-devel with proof-of-concept patch for ssh_func.inc</a>
  </li>
</ul>

<h3>Purpose</h3>

<p>
Remove support for shared socket concept used for SSH access.
</p>

<h3>Rationale</h3>

<p>
NVTs using SSH connections to perform Local Security Checks (LSCs) currently do
so through a so called shared socket. The idea of this concept is that the first
NVT needing an SSH connection will establish a connection and store a reference
to the socket which has been used for this connection in the knowledge base
(KB). Other NVTs will then use this socket for their SSH connection instead of
establishing their own separate connections.
</p>

<p>
While this idea is commendable, it has a number of drawbacks:
</p>

<ul>
  <li>The object which really should be shared here is the SSH <i>session</i>,
  not the raw network socket. Sharing the socket forces the NVTs using the
  socket to handle low level SSH connection management and session management,
  complicating the connection handling.</li>
  <li>The concept runs into serious trouble and crashes parts of the Scanner
  when a target has more than one SSH port for which the LSC credentials
  work.</li>
  <li>The shared socket can only be used by one NVT at a time, meaning other
  NVTs have to wait for the socket to become available again.</li>
  <li>Handling information about the shared sockets adds a communication
  overhead between the Scanner processes doing the scanning and their parent
  process.</li>
</ul>

<p>
With this in mind we propose that support for shared sockets should be removed
from LSCs via SSH. Since this is the only instance where shared sockets are
used, this makes a complete removal of the then superfluous shared socket
support code in the OpenVAS Scanner and the OpenVAS Libraries possible and
advisable.
</p>

<h3>Effects</h3>

<p>
Tests have shown that removing the use of shared sockets for SSH connections on
the NASL (which can be done experimentally using the patch attached to <a
  href="http://lists.wald.intevation.org/pipermail/openvas-devel/2011-April/002617.html">this
  mail</a>) causes a "Full and fast" scan with LSCs to take considerable less
time. Scans of a single system took only a third of the time needed with shared
sockets enabled.
</p>

<p>
A large part of the speed-up is likely caused by the parallelization of LSCs;
since the LSCs no longer have to wait for the shared sockets they can be done
concurrently.
</p>

<p>
A side effect is that doing concurrent LSCs increases the load of the target
system; however, even the increased load of multiple LSCs was very small and is
probably negligible for practical purposes. Multiple concurrent SSH connections
could also theoretically trigger some very old firewalls.
</p>

<p>
However, the side effects described are mainly a general effect of doing
concurrent checks and can be mitigated by adjusting the appropriate Scanner
preference.
</p>

<h3>Design and Implementation</h3>

<p>
A first change would be removing the use of shared sockets from the ssh_func.inc
NASL function library similar to the way it was done for the proof-of-concept
patch mentioned above.
</p>

<p>
This change would mean that a number of code paths in OpenVAS Libraries and
OpenVAS Scanner would be no longer necessary and could be subsequently removed.
</p>

<h3>History</h3>

<ul>
  <li> 2011-05-31 Jan-Oliver Wagner &lt;jan-oliver.wagner at greenbone dot net&gt;:<br/>
    Marked as done.
  </li>
  <li> 2011-05-19 Michael Wiegand &lt;michael.wiegand at greenbone dot net&gt;:<br/>
    Updated with voting results.
  </li>
  <li> 2011-04-29 Michael Wiegand &lt;michael.wiegand at greenbone dot net&gt;:<br/>
    Initial text.
  </li>
</ul>
