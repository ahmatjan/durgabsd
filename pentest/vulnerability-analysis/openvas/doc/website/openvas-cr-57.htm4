m4_dnl -*-html-*-
m4_include(`template.m4')

m4_dnl OpenVAS
m4_dnl $Id$
m4_dnl Description: OpenVAS Change Request #57 (NVT Feed Improvements 2)
m4_dnl
m4_dnl Authors:
m4_dnl Jan-Oliver Wagner <jan-oliver.wagner@greenbone.net>
m4_dnl
m4_dnl Copyright:
m4_dnl Copyright (C) 2011 Greenbone Networks GmbH
m4_dnl
m4_dnl This program is free software; you can redistribute it and/or
m4_dnl modify it under the terms of the GNU General Public License
m4_dnl as published by the Free Software Foundation; either version 2
m4_dnl of the License, or (at your option) any later version.
m4_dnl
m4_dnl This program is distributed in the hope that it will be useful,
m4_dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
m4_dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
m4_dnl GNU General Public License for more details.
m4_dnl
m4_dnl You should have received a copy of the GNU General Public License
m4_dnl along with this program; if not, write to the Free Software
m4_dnl Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

m4_define(`EN')
m4_define(`TITLE', `OpenVAS')
m4_define(`MAIN', `misc')

PAGE_START
<h2>OpenVAS Change Request #57: NVT Feed Product Detection Improvements</h2>

<p>
Status: Voted +7. In progress.
</p>

<h3>References</h3>

<ul>
  <li>
    <a href="http://lists.wald.intevation.org/pipermail/openvas-plugins/2011-November/000726.html">
      Implementation proposal for this Change Request on openvas-plugins
    </a>
  </li>
</ul>

<h3>Purpose</h3>

<p>
Consolidation of product detections done by NVTs and supporting tools like nmap.
</p>

<h3>Rationale</h3>

<p>
This change request intends a consolidation of the product detection NVTs.
Main reasons are:
</p>

<ul>

<li> <p> Have a separation between service detection (protocols) and actual products
         so that ultimately developers have a precise guide and examples how
         to write new ones, where to find existing ones and how to use the product
         detections for actual vulnerability assessment.
</li> </p>

<li> <p> Have product detection create no noise in terms of alerting. The plain detection
         of a product should not raise an alarm. Thus reports should contain less noise.
</li> </p>

<li> <p> Inform the user always how a vulnerability test acquired the product information.
         It is often relevant whether it was a remote banner or a direct package version detection.
</li> </p>

</ul>


<h3>Effects</h3>

<p>
In the reports, the number of "Low" messages will decrease, the number of "Log" messages will increase.
</p>

<h3>Design and Implementation</h3>

<p>
A new family "Product detections" is to be created where the cleaned up and reworked NVTs will be
added.
</p>

<p>
For any product detection NVT CVSS is set to 0.0 and risk factor to "None".
</p>

<p>
For any product detection NVT the only messages allowed are log_message() and debug_message().
</p>

<p>
For any product detection NVT the description should explain how the detection is performed, nothing else.
</p>

<p>
For any product detection NVT the log_message() should contain only information about special findings
that helped to detect the product. For example, the full banner that was retrieved. The user must be enabled
to understand how the product detection was performed, what the observed data is and what the conclusion
of the product detection was (a CPE in most cases).
</p>

<p>
For any product detection NVT the CPE should be registered with the host results.
</p>

<p>
For any product detection NVT a tag "detection" should be added defining the detection method:
</p>

<ul>

<li> <p> "remote banner" </p> </li>
<li> <p> "rpm package" </p> </li>
<li> <p> "deb package" </p> </li>
<li> <p> (more) </p> </li>

</ul>

<p>
One intention of the detection method is a ranking of reliability. A direct package version is more reliable
than the associated banner (typical e.g. for Debian where the patches are applied, but not the version indications).
Having them as a tag will allow users to search on categories in the NVT database more easily than it would
be the case if detection method would only be mentioned in description text.
</p>

<p>
Product detection NVTs should _not_ try to identify protocols, this is part of Service Detections.
Of course, a Service detection can be set as dependency and can also be adequate required keys be defined for protocols.
</p>

<p>
NVTs that currently do a product detection _and_ a vulnerability assessment should be split up into
two NVTs.
</p>

<p>
NVTs that currently do a product detection _and_ a service detection should be split up into
two NVTs.
</p>

<h3>History</h3>

<ul>
  <li> 2011-11-21 Henri Doreau &lt;henri.doreau at greenbone dot net&gt;:<br/>
    Updated status.
  </li>
  <li> 2011-11-10 Henri Doreau &lt;henri.doreau at greenbone dot net&gt;:<br/>
    Added reference to the implementation proposal.
  </li>
  <li> 2011-10-27 Jan-Oliver Wagner &lt;jan-oliver.wagner at greenbone dot net&gt;:<br/>
    Initial text.
  </li>
</ul>
