m4_dnl -*-html-*-
m4_include(`template.m4')

m4_dnl OpenVAS
m4_dnl $Id$
m4_dnl Description: OpenVAS Change Request #52 (Tighter integration of nmap)
m4_dnl
m4_dnl Authors:
m4_dnl Henri Doreau <henri.doreau@greenbone.net>
m4_dnl
m4_dnl Copyright:
m4_dnl Copyright (C) 2011 Greenbone Networks GmbH
m4_dnl
m4_dnl This program is free software; you can redistribute it and/or
m4_dnl modify it under the terms of the GNU General Public License
m4_dnl as published by the Free Software Foundation; either version 2
m4_dnl of the License, or (at your option) any later version.
m4_dnl
m4_dnl This program is distributed in the hope that it will be useful,
m4_dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
m4_dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
m4_dnl GNU General Public License for more details.
m4_dnl
m4_dnl You should have received a copy of the GNU General Public License
m4_dnl along with this program; if not, write to the Free Software
m4_dnl Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

m4_define(`EN')
m4_define(`TITLE', `OpenVAS')
m4_define(`MAIN', `misc')



PAGE_START
<h2>OpenVAS Change Request #52: Tighter integration of nmap</h2>

<p>
Status: Voted +5. Done as of SVN rev. 11026-11029,11033,11057,11067-11070.
</p>

<h3>Purpose</h3>

<p>
Run nmap only once per network for port scanning, service and OS detection,
traceroute and NSE, thus highly increasing performances and maintainability.
</p>

<h3>Rationale</h3>

<p>
This change request proposes a complete rewriting of the way nmap is used by OpenVAS. Nmap
is currently executed once per target for portscanning and OS detection, once
per target for service detection and once per NSE script per target if you
enable them (for a total of about 80 executions per host).
</p>

<p>
In case network wide scanning is enabled, then portscanning is performed only
once, but there is still one nmap instance per NSE per target. (We have 77
supported NSE in OpenVAS, but the number of available NSE scripts is increasing
rapidly). These NSE wrappers perform new port scans (either partial or complete
ones).
</p>

<p>
Nmap has been designed to handle parallelism and is more efficient when launched
once against multiple targets than multiple times against single targets. This
statement is especially true in term of memory usage. This waste of memory, time
and bandwidth could be avoided by having nmap executed only once, at the
beginning of the vulnerability scan. This can be achieved by using the network
wide scan phase and rewriting the related NVTs.
</p>

<h3>Effects</h3>

<p>
The most obvious effect is a massive performances increase (strongly reduced
scan time and memory footprint) but these changes also means a cleanup of the
network (unauthenticated) scanning stack and possibly more accurate results.
Proposed changes are also intended to ease the transition to newer nmap
releases.
<p>

<p>
Concerned parts:
<ul>
  <li>alive hosts detection (don't exclusively use ICMP)</li>
  <li>port scanning</li>
  <li>service/version detection</li>
  <li>OS fingerprinting</li>
  <li>traceroute (parallel, smart, adaptive and multiprotocol)</li>
  <li>NSE scans</li>
  <li>misc low level informations (incremental IP ID's, broken TCP seq generation...)</li>
</ul>
</p>

<p>
During the testing phase, a standard NSE scan for a /24 network (255 addresses,
about 20 hosts up) ran 60 times faster than when using the current system.
</p>

<h3>Design and Implementation</h3>

<p>
The main change is the introduction of a C wrapper for nmap, exporting a new
function run_nmap() to the NASL scripts.
</p>

<p>
This function builds a nmap command line according to the scan
configuration, runs nmap against the whole network and stores the results in
the knowledge base (KB). The ability to parse XML files is also implemented.
</p>

<p>
A C implementation was chosen because it allows to use (via the Glib XML
parser) the XML output of Nmap. OpenVAS currently uses the greppable one,
which is deprecated and not updated anymore. Therefore, the plugin can be
easily extended and migration to support newer versions of nmap should be
simpler.
</p>

<p>
When setting network_scan="yes", ACT_INIT, ACT_SCANNER and ACT_SETTINGS NVT's
are executed twice. The first execution is done against the whole network, the
second one against each host. The proposed changes heavily rely upon this
mechanism (already implemented after was CR #49 accepted).
</p>

<p>
It is necessary to change the scanner behaviour regarding ACT_INIT scripts in
order to handle dependencies correctly for the new NSE wrappers. These
wrappers need to be executed a first time before nmap_exp.nasl, to register
themselves, but only if they have been explicitely selected.

ACT_INIT (and ACT_SETTINGS) scripts were always scheduled for execution. This
was problematical as the new NSE wrappers were then automatically selected
with this system. Decision has been taken to keep the new NSE wrappers in this
category and change the scanner so that ACT_INIT scripts are only executed if
they have been selected in the scan configuration.

The implementation requires therefore to move the last ACT_INIT NVT to
ACT_SETTINGS and then make the category non-autoselect.
</p>

<p>
Results read from nmap output (or imported XML file) are stored in the KB. The
NVT's simply need to read the results and report them.
</p>

<p>
Changes on NVT's necessary for this change:
<ul>
  <li>nmap.inc:<br/>
  Exports a registration system, so that NSE wrappers can register
  themselves for execution, with their arguments.
  </li>

  <li>additional set of NSE wrappers:<br/>
    <ul>
      <li>1st step: register themselves with their arguments if they are scheduled for execution.</li>
      <li>2nd step: read the results from the KB and report them.</li>
    </ul>
    <p>
    As they're simplified, new NSE wrappers can be generated from the original
    NSE scripts. These new NSE wrappers would be stored as a separate set from
    the existing ones, in a nmap_nse_net directory for instance.
    </p>

  </li>

  <li>nmap_exp.nasl:<br/>
    <ul>
      <li>1st step: rebuild command line from scan config and registered scripts, then run nmap.</li>
      <li>2nd step: read port scanning, OS detection... results from the KB and report them.</li>
    </ul>
  </li>

</ul>
</p>

<h3>History</h3>

<ul>
  <li> 2011-07-04 Henri Doreau &lt;henri.doreau at greenbone dot net&gt;:<br/>
    Marked as done.
  </li>
  <li> 2011-06-01 Henri Doreau &lt;henri.doreau at greenbone dot net&gt;:<br/>
    Updated text with description of required scanner changes (non-autoselect
    ACT_INIT).
  </li>
  <li> 2011-05-30 Michael Wiegand &lt;michael.wiegand at greenbone dot net&gt;:<br/>
    Updated status with voting results
  </li>
  <li> 2011-04-27 Jan-Oliver Wagner &lt;jan-oliver.wagner at greenbone dot net&gt;:<br/>
    slight rework of text
  </li>
  <li> 2011-04-27 Henri Doreau &lt;henri.doreau at greenbone dot net&gt;:<br/>
    initial version
  </li>
</ul>
