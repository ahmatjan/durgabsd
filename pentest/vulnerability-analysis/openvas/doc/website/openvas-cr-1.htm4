m4_dnl -*-html-*-
m4_include(`template.m4')

m4_dnl OpenVAS
m4_dnl $Id$
m4_dnl Description: OpenVAS Change Request #1
m4_dnl
m4_dnl Authors:
m4_dnl Jan-Oliver Wagner <jan-oliver.wagner@intevation.de>
m4_dnl
m4_dnl Copyright:
m4_dnl Copyright (C) 2008 Intevation GmbH
m4_dnl
m4_dnl This program is free software; you can redistribute it and/or
m4_dnl modify it under the terms of the GNU General Public License
m4_dnl as published by the Free Software Foundation; either version 2
m4_dnl of the License, or (at your option) any later version.
m4_dnl
m4_dnl This program is distributed in the hope that it will be useful,
m4_dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
m4_dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
m4_dnl GNU General Public License for more details.
m4_dnl
m4_dnl You should have received a copy of the GNU General Public License
m4_dnl along with this program; if not, write to the Free Software
m4_dnl Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

m4_define(`EN')
m4_define(`TITLE', `OpenVAS')
m4_define(`MAIN', `misc')



PAGE_START
<h2>OpenVAS Change Request #1: Introduce OID as replacement for script_id</h2>

Status: Voted +5. Done. Legacy OID URLs implemented in OpenVAS-Client since 1.0.3, exclusive use of OIDs since 2.0.0.

<h3>Purpose</h3>

<p>
To support distributed development of NVTs avoiding ID-conflicts
on a systematic base.
</p>

<p>
To avoid confusion or/and conflicts with Nessus script IDs
from which IDs are inherited but where the scripts may differ
meanwhile due to maintenance modifications.
</p>

<h3>References</h3>

<p>
<a href="http://lists.wald.intevation.org/pipermail/openvas-discuss/2008-January/000472.html">Discussion on openvas-discuss mailing list</a>
</p>

<h3>Rationale</h3>

<p>
The current ID-scheme for NVTs is based on integer values.
Scripts inherited from Nessus have IDs 1NNNN and 2NNNN,
the Debian Local Security Checks (DLSCs) have 5NNNN and 6NNNN - not
all values in these ranges are consumed for Scripts.
</p>

<p>
It is a conceivable option to continue with assign further ranges to
specific contributors, but this will cause problems,
because either the ranges are too big and the ID space exceeds
or the ranges are small and multiple assignments need to be
managed for the same contributor. Assignments to Families reveal
other problems: The range was to small and a family might be distributed
of two or more ID ranges.
</p>

<p>
A more generic alternative is the use of an OID scheme which
solves:
</p>

<ul>
<li> continuous ID subnumbers for families without limitation
<li> structure in ID scheme (groups, subgroups, families etc)
<li> Number scheme directly linked with Name scheme which makes
     it easier readable for humans.
<li> easier assignments of responsibilities for certain parts
     of the ID space.
<li> a side effect would be that the introduction of URLs for the
     scripts (e.g. http://www.openvas.org/1.3.6.1.4.1.25623.1.0.976.html)
     for various reference purposes would be based on sustainable concept
     which in turn ensures longevity of links.
</ul>

<h3>Effects</h3>

<ul>
<li> Newly written NASL scripts need to specify OID
     instead of ID, e.g.: script_oid("1.3.6.1.4.1.25623.1.2.1157.1");
<li> script_id() is deprecated. No concurrent use of both allowed.
     For compatibility, script_id() statements will be accepted
     as long as no script_oid() statement occurs.
</ul>

<p>
In effect this means, new OpenVAS Servers can use old NASL scripts,
but old servers will not be able to handle new NASL scripts.
Since it does make sense to manage a special Feed with old ID scheme
(high effort)
any OpenVAS users will be forced to update to the new server if
they want to use the new scripts.
Thus, the new OpenVAS server should be released and distributed prior
to starting to apply OID in scripts. A clear timeline must be communicated
to all users by when they have to update the server at the latest.
</p>

<p>
Even earlier the OpenVAS clients need to be updated (highest priority).
</p>

<p>
It needs to be evaluated whether it makes sense to have a
convenience work around in a way that OIDs are transformed
into Integer IDs (e.g. 1.3.6.1.4.1.25623.1.0.1157.1 to 11001157001).
It is not possible to ensure uniqueness of convenience IDs
but they would be quite unlikely.
In case a convenience ID is applied, backward compatibility would
be possible to some extent.
</p>

<h3>Design and Implementation</h3>

<ul>
<li> In general, at various places no OID might be available yet (old script)
     but a OID scheme is needed. In these cases the OID is assembled this way
     using the old ID (specific scheme to be decided)
<li> Extend specification of protocol for optional OID and update documentation.
<li> Handling of the OID: In openvas-libraries/libopenvas/plugutils.c new
     functions plug_set_oid() and plug_get_oid().
<li> Add handling of OID in openvas-libraries/libopenvas/store.c.
<li> Add function script_oid() in openvas-libnasl/nasl/nasl_nessusd_glue.c.
<li> Add OID handling to protocol in openvas-server/openvasd/comm.c
<li> Replace handling of ID by OID in openvas-server/openvasd/nasl_plugins.c
<li> Replace use of ID by OID in openvas-server/openvasd/pluginlaunch.c.
<li> Modify to use OID instead of ID in openvas-server/openvasd/plugs_hash.c.
<li> Eventually: Assign OIDs in openvas-plugins/plugins/*/*.c
<li> Eventually: During consolidation effort, assign OIDs in openvas-plugins/scripts/*.nasl
<li> OpenVAS-Client: Add additional handling of OID for protocol and various places
     in GUI, storage, import and export.
<li> Documentation of OID scheme in OpenVAS manuals and on website (also in Howtos for
     NASL developers)
</ul>

<p>
OID Scheme by examples:
</p>

<p>
Note: OpenVAS OIDs can be applied to arbitrary things, so NVTs are only one group.
</p>

<p>
Legacy OID for old Nessus script ID 976:<br>
1.3.6.1.4.1.25623.1.0.976 = iso.org.dod.internet.private.enterprise.OpenVAS.NVT.legacy.976
</p>

<p>
Group for support scripts (e.g. information gatherer):<br>
1.3.6.1.4.1.25623.1.1 = iso.org.dod.internet.private.enterprise.OpenVAS.NVT.lib
</p>

<p>
Support script for gathering the package information from target host (gather-package-list.nasl):<br>
1.3.6.1.4.1.25623.1.1.1 = iso.org.dod.internet.private.enterprise.OpenVAS.libraries.gather-package-list
</p>

<p>
Family of Local Vulnerability Checks Level 1 for Debian Security Alerts:<br>
1.3.6.1.4.1.25623.1.2 = iso.org.dod.internet.private.enterprise.OpenVAS.NVT.DSA-LVT-L1
</p>

<p>
Version 1 of DSA 1157 implemented as Local Vulnerability Check Level 1:<br>
1.3.6.1.4.1.25623.1.2.1157.1 = iso.org.dod.internet.private.enterprise.OpenVAS.NVT.DSA.1157.1
</p>

<h3>History</h3>

<ul>
<li> 2008-01-24 Jan-Oliver Wagner &lt;jan-oliver.wagner@intevation.de&gt;:<br>
     Initial text.
<li> 2008-02-23 Jan-Oliver Wagner &lt;jan-oliver.wagner@intevation.de&gt;:<br>
     Updated status with result of voting.
<li> 2008-04-05 Jan-Oliver Wagner &lt;jan-oliver.wagner@intevation.de&gt;:<br>
     Updated status.
<li> 2008-12-29 Michael Wiegand &lt;michaek.wiegabd@intevation.de&gt;:<br>
     Updated status.
</ul>

