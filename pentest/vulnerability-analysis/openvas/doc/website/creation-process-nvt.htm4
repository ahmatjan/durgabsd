m4_dnl -*-html-*-
m4_include(`template.m4')

m4_dnl OpenVAS
m4_dnl $Id$
m4_dnl Description: Description of the creation process for Network Vulnerability Tests (NVTs)
m4_dnl
m4_dnl Authors:
m4_dnl Jan-Oliver Wagner <jan-oliver.wagner@intevation.de>
m4_dnl
m4_dnl Copyright:
m4_dnl Copyright (C) 2007 Intevation GmbH
m4_dnl
m4_dnl This program is free software; you can redistribute it and/or
m4_dnl modify it under the terms of the GNU General Public License
m4_dnl as published by the Free Software Foundation; either version 2
m4_dnl of the License, or (at your option) any later version.
m4_dnl
m4_dnl This program is distributed in the hope that it will be useful,
m4_dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
m4_dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
m4_dnl GNU General Public License for more details.
m4_dnl
m4_dnl You should have received a copy of the GNU General Public License
m4_dnl along with this program; if not, write to the Free Software
m4_dnl Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

m4_define(`EN')
m4_define(`TITLE', `OpenVAS')
m4_define(`MAIN', `misc')


PAGE_START

<h2>Creation Process for Network Vulnerability Tests (NVTs)</h2>

<img class="right" src="img/OpenVAS-NVT-creation-process.png" alt="OpenVAS NVT creation process">

<p>
<b>
Note: The process described here is a proposal and not yet implemented.
Please submit any comments or suggestions to the openvas-discuss mailing list.
</b>
</p>

<h3>Overview</h3>

<p>
This document describes the creation process for Network Vulnerability Tests (NVTs)
for the network security scanner OpenVAS.
NVTs are test routines that check for presence of a vulnerability on a target
system.
OpenVAS coordinates the execution of many of such tests to many target systems
and collects the results.
</p>

<p>
The process starts with collecting upcoming security alerts and ends with the release
of a newly developed NVT that checks for the reported vulnerability.
</p>

<p>
The most important phases of this process are: Initial prioritization (Evaluation),
final prioritization (Decision), implementation, quality assurance and
release/distribution.
</p>

<p>
These phases as well as supporting technologies are described in more detail below.
</p>

<h3>Short summary</h3>

<p>
Before the actual implementation of a NVT starts, a evaluation matrix
is applied to find out about the initial priority of a security advisory.
After that, the security advisory is added to the overall priority list.
This step is performed by the evaluation team.
</p>

<p>
The sources for security advisories are carefully selected
and connected with an automatic notification process.
Thus, the initial prioritization is an ongoing process driven by
such notifications.
</p>

<p>
At certain intervals, a decision team does a final prioritization to decide
for which security advisories corresponding NVTs are to be developed.
</p>

<p>
The relevance and the level of complexity for the defined target systems is
considered for both the initial and the final prioritization.
</p>

<h3>The whole process in five steps</h3>

<ul>

<li>Evaluation: The evaluation team, alerted by a security advisory notification,
    applies the evaluation matrix and thus comes to the initial prioritization.
    This information is added to the general priority overview.</li>

<li>Decision: The decision team selects those security alerts for which the
    implementation of a corresponding NVT is highly desired (final
    prioritization). This decision making takes place according to a defined
    schedule.</li>

<li>Implementation: The development team actually implements a NVT.
    In case of problems (solution strategy unclear or effort very high)
    the issue is handed back to the decision team for reconsideration.</li>

<li>Quality Assurance: The QA team executes the quality assurance for the results
    of the development team. If a NVT does not meet the quality standard, the
    issue is handed back to the development team.</li>

<li>Release/Distribution: The release (transfer of new NVT into NVT distribution
    mechanism) is the last step to be done by the QA team in case the NVT passes
    quality tests.</li>

</ul>

<p>
Multiple roles as given with the various teams could be fulfilled by one person as long
as it is ensured that he or she never does implementation and quality assurance for
the same NVT.
</p>

<p>
It is a integral feature of this process that the experiences gained from daily practice
will lead to changes or refinements of the process whenever regarded useful or required.
</p>
