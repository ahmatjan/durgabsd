m4_dnl -*-html-*-
m4_include(`template.m4')

m4_dnl OpenVAS
m4_dnl $Id$
m4_dnl Description: OpenVAS Change Request #50
m4_dnl
m4_dnl Authors:
m4_dnl Jonas Andradas <jonas@andradas.es>
m4_dnl
m4_dnl Copyright:
m4_dnl Copyright (C) 2010 Jonas Andradas <jonas@andradas.es>
m4_dnl
m4_dnl This program is free software; you can redistribute it and/or modify
m4_dnl it under the terms of the GNU General Public License version 2,
m4_dnl or, at your option, any later version as published by the Free
m4_dnl Software Foundation
m4_dnl
m4_dnl This program is distributed in the hope that it will be useful,
m4_dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
m4_dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
m4_dnl GNU General Public License for more details.
m4_dnl
m4_dnl You should have received a copy of the GNU General Public License
m4_dnl along with this program; if not, write to the Free Software
m4_dnl Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

m4_define(`EN')
m4_define(`TITLE', `OpenVAS')
m4_define(`MAIN', `misc')



PAGE_START
<h2>OpenVAS Change Request #50: Automatic restart of openvas-scanner after plugin updates</h2>

<p>
Status: In discussion.
</p>

<h3>Purpose</h3>

<p>
Automatic restart of openvas-scanner after plugin updates and/or retrieving
new plugins.
</p>

<h3>Rationale</h3>

<p>
If openvas-nvt-sync is run as a cron job, updates to current plugins or new
plugins added to the feed will not be reflected and known by
openvas-scanner. Thus, scans will not benefit from these new plugins. In
order to achieve this, openvas-scanner should be restarted manually. It
would be useful, convenient and interesting if openvas-nvt-sync could notify
openvas-scanner that there are new plugins, triggering the scheduling of a
restart of the openvas-scanner daemon.
</p>

<h3>Effects</h3>

<p>
As explained below, the scheduled restart should only take place when all
current scans have finished and probably it would be a good idea to also
wait until no clients are connected. However, during the restart time, in
which the new plugins are processed, users would not be able to connect with
the openvas-scanner.
</p>

<h3>Design and Implementation</h3>

<p>
After running openvas-nvt-sync, if there new plugins have been downloaded
(if using rsync, this can be known, with other methods maybe this will
trigger always), the script could notify openvas-scanner using a signal
(SIGUSR1, SIGUSR2, SIGHUP...). The openvas-scanner daemon would received
this signal and set an internal flag indicating that a daemon restart should
be performed when possible.
</p>

<p>
When all current running scans have finished, this restart could be
performed. To minimize the impact on user experience, it would probably be a
good idea to also wait until all currently-connected clients disconnect from
the server (though if some users leave their clients connected permanently,
this could prevent the daemon from restarting).  If there are scheduled
scans they could also be taken into account, and only allow the restart to
be done when the next scheduled-scan is at least several minutes further in
time (maybe the amount of minutes could be estimated depending on the number
of new plugins)
</p>

<p>
To minimize impact on user-experience, maybe a small dummy service could be
started before processing the plugins, listening on the usual
openvas-scanner port, whose role is just to inform incoming client
connections that the scanner is restarting and processing new plugins, and
ask to wait or retry later.
</p>

<h3>History</h3>

<ul>
<li> 2010-08-23 Jan-Oliver Wagner &lt;jan-oliver.wagner at greenbone dot net&gt;:<br>
     Created CR file from the proposal submitted by Jonas Andradas to openvas-devel.
</li>
</ul>
