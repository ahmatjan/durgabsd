m4_dnl -*-html-*-
m4_include(`template.m4')

m4_dnl OpenVAS
m4_dnl $Id$
m4_dnl Description: OpenVAS Change Request #48
m4_dnl
m4_dnl Authors:
m4_dnl Hartmut Goebel <h.goebel@goebel-consult.de>
m4_dnl
m4_dnl Copyright:
m4_dnl Copyright (C) 2010 Hartmut Goebel
m4_dnl
m4_dnl This program is free software; you can redistribute it and/or modify
m4_dnl it under the terms of the GNU General Public License version 2,
m4_dnl as published by the Free Software Foundation.
m4_dnl or, at your option, any later version as published by the Free
m4_dnl
m4_dnl This program is distributed in the hope that it will be useful,
m4_dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
m4_dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
m4_dnl GNU General Public License for more details.
m4_dnl
m4_dnl You should have received a copy of the GNU General Public License
m4_dnl along with this program; if not, write to the Free Software
m4_dnl Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

m4_define(`EN')
m4_define(`TITLE', `OpenVAS')
m4_define(`MAIN', `misc')



PAGE_START
<h2>OpenVAS Change Request #48: Define OMP and OAP in RelaxNG Schema Language</h2>

<p>
Status: Voted +5. Done: OpenVAS Manager and OpenVAS Administrator of OpenVAS-4
can provide the protocol specification via command "help".
</p>

<h3>Purpose</h3>

<ul>
<li>support API developers to implement OMP and OAP clients or
    client-APIs </li>
<li>help to make and keep the protocols consistent</li>
<li>enable test suites to be written for both client and server side
    of OMP and OAP </li>
</ul>


<h3>References</h3>

<ul>

<li><a href="http://lists.wald.intevation.org/pipermail/openvas-discuss/2010-March/001615.html">Matthew Mundell about not working OMP tests in SVN </a></li>

<li><a href="http://lists.wald.intevation.org/pipermail/openvas-discuss/2010-March/001634.html">Comments on OMP from Hartmut Goebel</a></li>

<li>Several discussions on how to use the OMP command line client, e.g. <a href="http://lists.wald.intevation.org/pipermail/openvas-discuss/2010-May/001878.html">this thread</a></li>

</ul>

<h3>Rationale</h3>

<p>
Documenting OMP and OAP in a formal schema would help keeping the OMP
and OAP documentation up to date. This would
</p>

<ul>
<li>support API developers to implement OMP and OAP client-APIs</li>
<li>help finding redundancies, contradictions and other
inconsistencies in the OMP and OAP specification and during further
development of these protocols</li>
<li>enable test suites to be written for both client and server side
of OMP and OAP</li>
</ul>



<h3>Design and Implementation</h3>

<p>
For the schema syntax, <a
href="http://relaxng.org/compact-20021121.html">Relax NG compact
syntax</a> (RNC) is proposed. While there are many other schema
definition syntaxes (DTD, Relax NG normal syntax, XML Schema
Definition, etc.) RNC has the benefits of being compact and easy to
read. RNC uses some kind of <a
href="http://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form">Backus-Naur-Form</a>
(BNF), which many software developers should be used to.</p>

<p>
If required, Relax NG compact syntax can be converted into DTD, Relax
NG normal syntax or XML Schema Definition using the tool <a
href="http://www.thaiopensource.com/relaxng/trang.html">trang</a> (or
others). XML documents can be validated against Relax NG using e.g. <a
href="http://www.xmlsoft.org/">libxml2</a> or emacs' nXML-mode.
Syntax-highlighting can be done with e.g. <a
href="http://www.andre-simon.de/zip/download.html">Syntax-higlight</a>.
</p>

<p>Here is a simple RelaxNG example for the <span class="pre">create_agent</span> OMP command:
</p>

<pre class="hl">
  <span class="hl def">create_agent</span> = <span class="hl kwa">element</span> <span class="hl name">create_agent</span> <span class="hl sym">{</span>
      elem.name,
      comment<span class="hl sym">?</span>,
      installer,
      howto_use<span class="hl sym">?</span>,
      howto_install<span class="hl sym">?</span>
      <span class="hl sym">}</span>
  <span class="hl def">installer</span>     = <span class="hl kwa">element</span> <span class="hl name">installer</span>     <span class="hl sym">{</span> Base64.datatype <span class="hl sym">}</span>
  <span class="hl def">howto_use</span>     = <span class="hl kwa">element</span> <span class="hl name">howto_use</span>     <span class="hl sym">{</span> <span class="hl kwb">text</span> <span class="hl sym">}</span>
  <span class="hl def">howto_install</span> = <span class="hl kwa">element</span> <span class="hl name">howto_install</span> <span class="hl sym">{</span> <span class="hl kwb">text</span> <span class="hl sym">}</span>
</pre>

<p>And here is an example for the OAP <span class="pre">get_settings_response</span>:</p>
<pre class="hl">
<span class="hl def">get_settings</span> = <span class="hl kwa">element</span> <span class="hl name">get_settings</span> <span class="hl sym">{</span> <span class="hl kwb">empty</span> <span class="hl sym">}</span>

<span class="hl def">get_settings_response</span> = <span class="hl kwa">element</span> <span class="hl name">get_settings_response</span> <span class="hl sym">{</span>
    Status.attribs,
    <span class="hl kwa">element</span> <span class="hl name">scanner_settings</span> <span class="hl sym">{</span>
        <span class="hl kwa">attribute</span> sourcefile,
	<span class="hl kwa">attribute</span> editable <span class="hl sym">[</span> <span class="hl str">&quot;0&quot;</span> <span class="hl sym">|</span> <span class="hl str">&quot;1&quot;</span> <span class="hl sym">]</span>,
	setting.get
    <span class="hl sym">}</span>
<span class="hl def">setting.get</span> = <span class="hl kwa">element</span> <span class="hl name">setting</span> <span class="hl sym">{</span>
    <span class="hl kwa">attribute</span> name,
    <span class="hl kwb">text</span>
    <span class="hl sym">}</span>
<span class="hl def">modify_settings</span> = <span class="hl kwa">element</span> <span class="hl name">modify_settings</span> <span class="hl sym">{</span>
    setting.modify<span class="hl sym">?</span>
    <span class="hl sym">}</span>
<span class="hl def">setting.modify</span> = <span class="hl kwa">element</span> <span class="hl name">setting</span> <span class="hl sym">{</span>
    <span class="hl kwa">element</span> <span class="hl name">name</span> <span class="hl sym">{</span> <span class="hl kwb">text</span> <span class="hl sym">}</span>,
    <span class="hl kwa">element</span> <span class="hl name">value</span> <span class="hl sym">{</span> <span class="hl kwb">text</span> <span class="hl sym">}</span>
    <span class="hl sym">}</span>
</pre>

<ol>
<li>
A draft version of <span class="pre">omp-1.0.rnc</span> exists, written by Hartmut
Goebel (see attachment to <a
href="http://lists.wald.intevation.org/pipermail/openvas-devel/2010-March/002139.html">this
message on openvas-devel</a>). As of this initial writing, this draft
is known to be incomplete and erroneous. Developers of openvas-manager
are requested to complete and correct this draft.
</li>
<li>
A draft version of <span class="pre">oap-1.0.rnc</span> exists, written by Hartmut
Goebel. This draft is quite complete yet. Nevertheless developers of
openvas-administrator are requested to complete and correct this
draft.
</li>
</ol>

<h4>Suggested Changes</h4>

<ol>
<li>
A file <span class="pre">omp-1.0.rnc</span> will be added to openvas-manager. This
file defines the schema syntax of OMP Version 1.0. Until OMP Version
1.0 has stabilised, this file has to be updated whenever the
implementation changes. This has to be done by the developer
implementing the change.
</li>
<li>
A file <span class="pre">oap-1.0.rnc</span>  will be added to openvas-administrator.
This file defines the schema syntax of OAP Version 1.0. Until OAP
Version 1.0 has stabilised, this file has to be updated whenever the
implementation changes. This has to be done by the developer
implementing the change.
</li>
</ol>

<h4>Future directions</h4>

<p>
Matthew Mundell <a
href="http://lists.wald.intevation.org/pipermail/openvas-devel/2010-May/002221.html">suggested</a>
to extend the RNG file to also describe the behaviour of the commands.
So the RNG could replace the description in the CR. Maybe with Doxygen
comments can be used for this.
</p>

<h3>Effects</h3>

<p>
This is a new component. No effects to any currently existing
component.
</p>


<h3>History</h3>

<ul>
<li> 2010-01-24 Jan-Oliver Wagner &lt;jan-oliver.wagner@greenbone.net&gt;:<br/>
     Setting status to "Done".</li>
<li> 2010-08-18 Jan-Oliver Wagner &lt;jan-oliver.wagner@greenbone.net&gt;:<br/>
     Setting status to "in progress".</li>
<li> 2010-08-09 Jan-Oliver Wagner &lt;jan-oliver.wagner@greenbone.net&gt;:<br/>
     Editorial Changes. Move technical design aspects from section "rationale" to
     "design and implementation".</li>
<li> 2010-05-17 Hartmut Goebel &lt;h.goebel@goebel-consult.de&gt;:<br/>
     Editorial Changes. Added "Future directions".</li>
<li> 2010-05-06 Hartmut Goebel &lt;h.goebel@goebel-consult.de&gt;:<br/>
     Added OAP and OAP example. Syntax highlight for examples.</li>
<li> 2010-04-22 Hartmut Goebel &lt;h.goebel@goebel-consult.de&gt;:<br/>
     Initial text.</li>
</ul>

<style type="text/css">
/* Style definition file generated by highlight 2.16, http://www.andre-simon.de/ */

/* Highlighting theme definition: */

body.hl { background-color:#ffffff; }
pre, span.pre  { background-color:WhiteSmoke; font-family:fixed; }

pre.hl  { padding:1em 0 1em 1em; margin:0 2em;}
.hl.num { color:#2928ff; }
.hl.esc { color:#ff00ff; }
.hl.str { color:darkred; }
.hl.dstr { color:#818100; }
.hl.slc { color:#838183; font-style:italic; }
.hl.com { color:#838183; font-style:italic; }
.hl.dir { color:#008200; }
.hl.sym { color:#black; }
.hl.line { color:#555555; }
.hl.def { color:darkred; font-weight:normal; }
.hl.name { color:darkgreen; font-weight:bold; }
.hl.mark { background-color:#ffffbb;}
.hl.kwa { color:black; font-weight:bold; }
.hl.kwb { color:#830000; }
.hl.kwc { color:black; font-weight:bold; }
.hl.kwd { color:#010181; }
</style>
